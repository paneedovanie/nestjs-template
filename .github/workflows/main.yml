name: CI
on: push

env:
  DATABASE_URL: postgresql://postgres:password@postgres:5432/nestjs-template?schema=public
  DATABASE_URL_TEST: postgresql://postgres:password@postgres:5432/test?schema=public

jobs:
  # label of the container job
  postgres-job:
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12-alpine
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: nestjs-template
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # - name: Install PostgreSQL client
      #   run: |
      #     apt-get update
      #     apt-get install --yes postgresql-client

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Generate prisma client
        run: npx prisma generate

      - name: Run test
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:password@postgres:5432/nestjs-template?schema=public
          DATABASE_URL_TEST: postgresql://postgres:password@postgres:5432/test?schema=public
